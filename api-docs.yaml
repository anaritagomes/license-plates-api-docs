openapi: 3.0.0
info:
  title: License Plates API
  description: API for managing vehicle license plates in the BCA database.
  version: 1.0.0
servers:
  - url: https://api.bca.com
    description: Production server
paths:
  /licenseplates:
    get:
      summary: Retrieve all license plates
      description: Returns a list of all vehicle license plates in BCAâ€™s database.
      operationId: getLicensePlates
      responses:
        "200":
          description: A list of license plates.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LicensePlate"
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: Add a new license plate
      description: Adds a new vehicle to the license plates database.
      operationId: addLicensePlate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LicensePlateInput"
      responses:
        "201":
          description: License plate added successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LicensePlate"
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /licenseplates/{id}:
    put:
      summary: Update a license plate
      description: Modify details of an existing vehicle using its ID.
      operationId: updateLicensePlate
      parameters:
        - name: id
          in: path
          required: true
          description: The unique ID of the license plate.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LicensePlateInput"
      responses:
        "200":
          description: License plate updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LicensePlate"
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: License plate not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Delete a license plate
      description: Remove a vehicle record using its license plate ID.
      operationId: deleteLicensePlate
      parameters:
        - name: id
          in: path
          required: true
          description: The unique ID of the license plate.
          schema:
            type: string
      responses:
        "204":
          description: License plate deleted successfully.
        "404":
          description: License plate not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    LicensePlate:
      type: object
      properties:
        id:
          type: string
          example: "150"
        make:
          type: string
          example: "Audi"
        vin:
          type: string
          example: "WAUZ7856UJHI15485"
        registration_date:
          type: string
          format: date
          example: "2010-08-24"

    LicensePlateInput:
      type: object
      required:
        - make
        - vin
        - registration_date
      properties:
        make:
          type: string
          example: "Audi"
        vin:
          type: string
          example: "WAUZ7856UJHI15485"
        registration_date:
          type: string
          format: date
          example: "2010-08-24"

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Invalid request. Check input parameters."